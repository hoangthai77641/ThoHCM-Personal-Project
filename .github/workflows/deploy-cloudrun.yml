name: Deploy Backend to Cloud Run

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - 'config/cloudbuild.yaml'
      - '.github/workflows/deploy-cloudrun.yml'
  workflow_dispatch:

env:
  PROJECT_ID: thohcm-application-475603
  SERVICE_NAME: thohcm-backend
  REGION: asia-southeast1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Verify Authentication
      run: |
        echo "Current authenticated account:"
        gcloud auth list
        echo "Current project:"
        gcloud config get-value project

    - name: Enable required APIs
      run: |
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud services enable containerregistry.googleapis.com

    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker

    - name: Build and Deploy to Cloud Run
      run: |
        echo "Starting Cloud Build..."
        gcloud builds submit --config=config/cloudbuild.yaml --timeout=20m
        
    - name: Wait for deployment to be ready
      run: |
        echo "Waiting for service to be ready..."
        gcloud run services wait $SERVICE_NAME --region=$REGION --timeout=300
        
    - name: Get Service URL
      id: get-url
      run: |
        URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Backend deployed to: $URL"

    - name: Update Environment Variables
      run: |
        gcloud run services update $SERVICE_NAME --region=$REGION \
          --set-env-vars MONGODB_URI="${{ secrets.MONGODB_URI }}" \
          --set-env-vars JWT_SECRET="${{ secrets.JWT_SECRET }}" \
          --set-env-vars ALLOWED_ORIGINS="${{ vars.ALLOWED_ORIGINS || 'https://thohcm.web.app' }}"

    - name: Verify Deployment
      run: |
        echo "Testing health endpoint..."
        curl -f ${{ steps.get-url.outputs.url }}/api/health || exit 1
        echo "âœ… Backend is healthy!"